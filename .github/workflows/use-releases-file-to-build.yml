#==========================================================================
# Description: Build Armbian
# Copyright (C) 2021 https://github.com/ophub/amlogic-s9xxx-armbian
#==========================================================================

name: Use Releases file to rebuild armbian

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      set_release:
        description: "Select OS Release."
        required: false
        default: "jammy"
        type: choice
        options:
          - jammy
          - lunar
          - bookworm
      armbian_board:
        description: "Select device board."
        required: false
        default: "all"
        type: choice
        options:
          - nanopc-t4
      armbian_kernel:
        description: "Select kernel version."
        required: false
        default: "6.6.1"
        type: choice
        options:
          - 6.6.1
      auto_kernel:
        description: "Auto use the latest kernel."
        required: false
        default: true
        type: boolean
      kernel_repo:
        description: "Set the kernel repository."
        required: false
        default: "ophub/kernel"
        type: choice
        options:
          - ophub/kernel
      kernel_usage:
        description: "Set the tags of the stable kernel."
        required: false
        default: "stable"
        type: choice
        options:
          - stable
          - flippy
          - dev
          - beta
      armbian_fstype:
        description: "Select armbian rootfs type."
        required: false
        default: "ext4"
        type: choice
        options:
          - ext4
          - btrfs
      armbian_storage:
        description: "Select image storage type."
        required: false
        default: "save"
        type: choice
        options:
          - save
          - temp
      builder_name:
        description: "Set Armbian builder signature."
        required: false
        default: "ophub"
        type: choice
        options:
          - ophub
          - angel
          - yourname

env:
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Download Armbian from Releases
        id: down
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          armbian_buildpath="build/output/images"
          [[ -d "${armbian_buildpath}" ]] || mkdir -p "${armbian_buildpath}"

          latest_version="$(curl -s \
                              -H "Accept: application/vnd.github+json" \
                              -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
                              https://api.github.com/repos/${GITHUB_REPOSITORY}/releases?per_page=100 |
                              jq '.[]' |
                              jq -s --arg RTK "Armbian_${{ inputs.set_release }}_" '.[] | select(.tag_name | contains($RTK))' |
                              jq -s '.[].assets[] | {data:.updated_at, url:.browser_download_url}' |
                              jq -s --arg BOARD "-trunk_" '.[] | select((.url | contains($BOARD)) and (.url | endswith(".img.gz")))' |
                              jq -s 'sort_by(.data)|reverse[]' |
                              jq -s '.[0]' -c
                          )"

          [[ "${latest_version}" == "null" ]] && echo "Invalid Armbian image download address." && exit 1
          latest_updated_at="$(echo ${latest_version} | jq -r '.data')"
          latest_url="$(echo ${latest_version} | jq -r '.url')"

          armbian_filename="${latest_url##*/}"
          curl -fsSL "${latest_url}" -o "${armbian_buildpath}/${armbian_filename}"
          [[ "${?}" -ne "0" ]] && echo "Invalid Armbian image download address." && exit 1
          cd "${armbian_buildpath}" && gzip -df *.img.gz && sync

          echo "build_tag=Armbian_${{ inputs.set_release }}_${{ inputs.armbian_storage }}_$(date +"%Y.%m")" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Rebuild Armbian [ ${{ inputs.set_release }} ]
        uses: ophub/amlogic-s9xxx-armbian@main
        if: ${{ steps.down.outputs.status }} == 'success' && !cancelled()
        with:
          build_target: armbian
          armbian_path: build/output/images/*.img
          armbian_board: ${{ inputs.armbian_board }}
          armbian_kernel: ${{ inputs.armbian_kernel }}
          auto_kernel: ${{ inputs.auto_kernel }}
          kernel_repo: ${{ inputs.kernel_repo }}
          kernel_usage: ${{ inputs.kernel_usage }}
          armbian_fstype: ${{ inputs.armbian_fstype }}
          builder_name: ${{ inputs.builder_name }}

      - name: Upload Armbian image to Release
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.down.outputs.build_tag }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            ### Armbian Image information
            - Default username: root
            - Default password: 1234
            - Install command: armbian-install
            - Update command: armbian-update
            ### Armbian Image Verification
            - sha256sum
